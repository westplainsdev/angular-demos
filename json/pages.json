[
    {
        "id":"page0",
        "title":"AngularJS",
        "menuItemClass":"title",
        "template":"partials/titlePage.html",
        "header":"AngularJS",
        "subheader":"What if HTML was designed for web apps..."
    },
    {
        "id":"page1",
        "title":"Why?",
        "template":"partials/sectionPage.html",
        "header":"Why AngularJS?",
        "content":"HTML is great for declaring static documents, but it falters when we try to use it for declaring dynamic views in web-applications. AngularJS lets you extend HTML vocabulary for your application. The resulting environment is extraordinarily expressive, readable, and quick to develop."
    },
    {
        "id":"page2",
        "title":"Hello",
        "template":"partials/codePage.html",
        "header":"Hello AngularJS",
        "fiddle":"http://jsfiddle.net/johnlindquist/BGcTA/1"
    },
    {
        "id":"page3",
        "title":"Architecture",
        "menuItemClass":"imgItem",
        "template":"partials/imgPage.html",
        "header":"Architecture",
        "img":"http://docs-next.angularjs.org/img/angular_parts.png"
    },
    {
        "id":"page4",
        "title":"Extensibility",
        "template":"partials/sectionPage.html",
        "header":"Extensibility",
        "content":"AngularJS is a toolset for building the framework most suited to your application development. It is fully extensible and works well with other libraries. Every feature can be modified or replaced to suit your unique development workflow and feature needs."
    },
    {
        "id":"page5",
        "title":"Control",
        "menuItemClass":"title",
        "template":"partials/titlePage.html",
        "header":"Add Some Control",
        "subheader":"Binding, Controller, and Plain Javascript Models"
    },
    {
        "id":"page6",
        "title":"Binding",
        "template":"partials/sectionPage.html",
        "header":"Data Binding",
        "content":"Data-binding is an automatic way of updating the view whenever the model changes, as well as updating the model whenever the view changes. This is awesome because it eliminates DOM manipulation from the list of things you have to worry about."
    },
    {
        "id":"page7",
        "title":"Controller",
        "template":"partials/sectionPage.html",
        "header":"Controller",
        "content":"Controllers are the behavior behind the DOM elements. AngularJS lets you express the behavior in a clean readable form without usual boilerplate of updating the DOM, registering callbacks or watching model changes."
    },
    {
        "id":"page8",
        "title":"JavaScript",
        "template":"partials/sectionPage.html",
        "header":"Plain JavaScript",
        "content":"Unlike other frameworks, there is no need to inherit from proprietary types; to wrap the model in accessors methods. Just plain old JavaScript here. This makes your code easy to test, maintain, reuse, and again free from boilerplate."
    },
    {
        "id":"page9",
        "title":"Neat, huh?",
        "menuItemClass":"title",
        "template":"partials/titlePage.html",
        "header":"Pretty neat, huh?",
        "subheader":"http://angular.github.com/angularjs.org"
    }
]
